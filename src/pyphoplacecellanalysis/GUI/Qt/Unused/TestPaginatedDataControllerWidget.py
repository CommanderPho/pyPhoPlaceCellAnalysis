import sys
import os

from PyQt5 import QtCore, QtGui, QtWidgets, uic
from PyQt5.QtWidgets import QMessageBox, QToolTip, QStackedWidget, QHBoxLayout, QVBoxLayout, QSplitter, QFormLayout, QLabel, QFrame, QPushButton, QTableWidget, QTableWidgetItem
from PyQt5.QtWidgets import QApplication, QFileSystemModel, QTreeView, QWidget, QHeaderView
from PyQt5.QtGui import QPainter, QBrush, QPen, QColor, QFont, QIcon
from PyQt5.QtCore import Qt, QPoint, QRect, QObject, QEvent, pyqtSignal, pyqtSlot, QSize, QDir


class PaginatedDataWidget(QWidget):
    """ 2023-05-08 - generated by ChatGPT """
    def __init__(self, data, page_size=10):
        super().__init__()
        self.data = data
        self.page_size = page_size
        self.current_page = 0

        self.setup_ui()

    def setup_ui(self):
        self.setLayout(QVBoxLayout())

        # Display current page information
        self.current_page_label = QLabel(f"Page {self.current_page+1}/{self.get_total_pages()}")
        self.layout().addWidget(self.current_page_label)

        # Display current page data
        self.page_data_label = QLabel("\n".join(self.get_current_page_data()))
        self.layout().addWidget(self.page_data_label)

        # Add navigation buttons
        navigation_layout = QHBoxLayout()
        self.layout().addLayout(navigation_layout)

        previous_button = QPushButton("Previous")
        previous_button.clicked.connect(self.previous_page)
        navigation_layout.addWidget(previous_button)

        next_button = QPushButton("Next")
        next_button.clicked.connect(self.next_page)
        navigation_layout.addWidget(next_button)

    def get_total_pages(self):
        return (len(self.data) + self.page_size - 1) // self.page_size

    def get_current_page_data(self):
        start_index = self.current_page * self.page_size
        end_index = min(start_index + self.page_size, len(self.data))
        return self.data[start_index:end_index]

    def previous_page(self):
        if self.current_page > 0:
            self.current_page -= 1
            self.current_page_label.setText(f"Page {self.current_page+1}/{self.get_total_pages()}")
            self.page_data_label.setText("\n".join(self.get_current_page_data()))

    def next_page(self):
        if self.current_page < self.get_total_pages() - 1:
            self.current_page += 1
            self.current_page_label.setText(f"Page {self.current_page+1}/{self.get_total_pages()}")


## Start Qt event loop
if __name__ == '__main__':
    import numpy as np
    app = QApplication([])
    _test_data = [str(x) for x in np.arange(100)]
    widget = PaginatedDataWidget(data=_test_data, page_size=10)
    widget.show()
    sys.exit(app.exec_())
